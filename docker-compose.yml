x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    loki-pipeline-stages: |
      - json:
          expressions:
            timestamp: '"@timestamp"'
            level: '"log.level"'
            zone: '"labels.zone"'
            serverGroup: '"labels.serverGroup"'
            message:
            trace_id:
      - labels:
          level:
          serverGroup:
      - timestamp:
          source: timestamp
          format: RFC3339Nano
          fallback_formats:
            - RFC3339
            - UNIX

services:
  admin-api:
    container_name: admin-api
    build:
      context: .
      dockerfile: ./apps/admin-api/Dockerfile
    restart: always
    ports:
      - '${ADMIN_API_PORT}:${ADMIN_API_PORT}'
    logging: *default-logging

  # product-api:
  #   container_name: product-api
  #   build:
  #     context: .
  #     dockerfile: ./apps/product-api/Dockerfile
  #   restart: always
  #   ports:
  #     - '${PRODUCT_API_PORT}:${PRODUCT_API_PORT}'

  loki:
    image: grafana/loki:3.0.0
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - '3100:3100'

  prometheus:
    image: prom/prometheus:v2.51.2
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./etc/prometheus:/workspace
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage
    depends_on:
      - loki

  tempo:
    image: grafana/tempo:2.4.1
    container_name: tempo
    command:
      [
        '--target=all',
        '--storage.trace.backend=local',
        '--storage.trace.local.path=/var/tempo',
        '--auth.enabled=false'
      ]
    ports:
      - '4317:4317' # otlp grpc
      - '4318:4318' # otlp http
    depends_on:
      - loki

  # k6-tracing:
  #   image: ghcr.io/grafana/xk6-client-tracing:v0.0.5
  #   environment:
  #     - ENDPOINT=tempo:4317
  #   restart: always
  #   depends_on:
  #     - tempo

  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    ports:
      - '3200:3000'
    volumes:
      - grafana-demo:/var/lib/grafana
      - ./etc/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    depends_on:
      - loki
      - prometheus

volumes:
  grafana-demo: {}

networks:
  default:
    name: app_network
    driver: bridge
    external: true
